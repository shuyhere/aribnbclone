// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url = env("DATABASE_URL")
}

model User {
  id       String   @id @default(auto()) @map("_id")  @db.ObjectId
  name     String?
  email    String?   @unique
  emailVerified DateTime?
  image  String?
  hashedPassword String?
  creatAt  DateTime @default(now())
  updateAt DateTime @updatedAt
  favorateIds String[] @db.ObjectId

  account Account[]
  listings Listing[]
  reservations Reservation[]
}

// creat a new model for Account
model Account {
  id       String   @id @default(auto()) @map("_id")  @db.ObjectId
  userId   String   @db.ObjectId
  typr String
  provider String
  providerAccountId String
  refresh_token String? @db.String
  access_token String? @db.String
  expires_at Int?
  token_type String?
  id_token String? @db.String
  session_state String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  //unique combination of provider and providerAccountId
  @@unique([provider, providerAccountId])
}

// creat a new model for Listing

model Listing {
  id       String   @id @default(auto()) @map("_id")  @db.ObjectId
  title    String
  description String
  imageSrc  String
  creatAt  DateTime @default(now())
  category String
  roomCount Int
  bathroomCount Int
  guestCount Int
  locationValue String
  userId  String   @db.ObjectId
  price Int
  updateAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  reservations Reservation[]
}

// creat a new model for Reservation
model Reservation{
  id       String   @id @default(auto()) @map("_id")  @db.ObjectId
  userId  String   @db.ObjectId
  listingId String   @db.ObjectId
  startDate DateTime
  endDate DateTime
  totalPrice Int
  creatAt  DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  listing Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)
}